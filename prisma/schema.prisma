generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             String          @id @default(uuid())
  name           String
  sku            String          @unique
  quantity       Int
  price          Float
  category       String?
  supplierId     String?
  supplier       Supplier?       @relation(fields: [supplierId], references: [id])
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  stockMovements StockMovement[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  office        Office    @default(GESTOR)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

enum Office {
  ADMIN
  GESTOR
}

model StockMovement {
  id            String       @id @default(uuid())
  type          MovementType
  quantity      Int
  originId      String?
  destinationId String?
  productId     String
  product       Product      @relation(fields: [productId], references: [id])
  createdAt     DateTime     @default(now())
}

enum MovementType {
  ENTRADA
  SAIDA
  TRANSFERENCIA
}

model Supplier {
  id           String    @id @default(uuid())
  name         String
  email        String
  contactPhone String
  deliveryTime DateTime
  description  String
  products     Product[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
